{"version":3,"sources":["constants/employeesConstants.js","actions/employeesActions.js","actions/birthdayActions.js","Screens/EmployeeScreen.jsx","Screens/EmployeesBoxScreen.jsx","Screens/EmployeesSceen.jsx","Screens/BirthdayScreen.jsx","App.js","reportWebVitals.js","store.js","reducers/employeesReducers.js","index.js"],"names":["EMPLOYEES_LIST_REQUEST","EMPLOYEES_LIST_SUCCESS","EMPLOYEES_LIST_FAIL","UPDATE_EMPLOYEES_CHECK_BOX","EMPLOYEE_ADD","EMPLOYEE_REMOVE","sortEmployees","data","sortedEmployees","mapEmployees","item","letter","lastName","checked","push","map","Map","Object","entries","convertedData","dob","convetedDataBirthday","dateBirthday","date","Date","month","moment","format","year","dateInMonth","updateEmployees","arrEmployees","id","employeeData","newArrEmployees","JSON","parse","stringify","find","forEach","sortedByMonth","state","split","slice","length","dataBirthday","arrBirthdayEnployees","EmployeeScreen","props","employee","firstName","dispatch","useDispatch","type","onChange","getState","employeesList","employees","newState","payload","localStorage","setItem","birthdayList","employeesBirthday","sortedData","newStateBirthday","i","splice","addToBirthdayList","EmployeesBoxScreen","listBox","list","className","EmployeesScreen","useSelector","loading","error","useEffect","a","axios","newData","message","BirthdayMonthScreen","boxList","BirthdayScreen","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","getItem","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56bae8b1.chunk.js","sourcesContent":["export const EMPLOYEES_LIST_REQUEST = 'EMPLOYEES_LIST_REQUEST';\nexport const EMPLOYEES_LIST_SUCCESS = 'EMPLOYEES_LIST_SUCCESS';\nexport const EMPLOYEES_LIST_FAIL = 'EMPLOYEES_LIST_FAIL';\n\nexport const UPDATE_EMPLOYEES_CHECK_BOX = 'UPDATE_EMPLOYEES_CHECK_BOX';\n\nexport const EMPLOYEE_ADD = 'EMPLOYEE_ADD';\nexport const EMPLOYEE_REMOVE = 'EMPLOYEE_REMOVE';","import * as axios from 'axios';\nimport moment from 'moment';\nimport {EMPLOYEES_LIST_FAIL, EMPLOYEES_LIST_REQUEST, EMPLOYEES_LIST_SUCCESS} from \"../constants/employeesConstants\";\n\nconst fetchEmployees = () => async (dispatch) => {\n    if(localStorage.employees){\n       let employees = JSON.parse(localStorage.employees);\n        dispatch({type: EMPLOYEES_LIST_SUCCESS, payload: employees})\n    }else{\n        try {\n            dispatch({type: EMPLOYEES_LIST_REQUEST});\n            const {data} = await axios.get('https://yalantis-react-school-api.yalantis.com/api/task0/users');\n            const newData = sortEmployees(convertedData(data));\n            dispatch({type: EMPLOYEES_LIST_SUCCESS, payload: newData});\n            localStorage.setItem('employees', JSON.stringify(newData));\n        } catch (error) {\n            dispatch({type: EMPLOYEES_LIST_FAIL, payload: error.message})\n        }\n    }\n};\n\nconst  sortEmployees = (data)=>{\n    const sortedEmployees = {\n        'A':[], 'B':[], 'C':[], 'D':[], 'E':[], 'F':[], 'G':[], 'H':[], 'I':[], 'J':[], 'K':[], 'L':[], 'M':[],\n        'N':[], 'O':[], 'P':[], 'Q':[], 'R':[], 'S':[], 'T':[], 'U':[], 'V':[], 'W':[], 'X':[], 'Y':[], 'Z':[]\n    };\n    const mapEmployees = [];\n    for (let item of data) {\n        let letter = item.lastName[0];\n        item.checked = false;\n        sortedEmployees[letter].push(item);\n    }\n    let map = new Map(Object.entries(sortedEmployees));\n    for (let item of map) {\n        mapEmployees.push(item);\n    }\n    return mapEmployees;\n};\n\nconst convertedData = (data) => {\n    return data.map((item) => {\n        return {...item, dob: convetedDataBirthday(item.dob)}\n    });\n\n};\n\nconst convetedDataBirthday = (dateBirthday) => {\n    const date = new Date(dateBirthday);\n    const month = moment(date).format('MMMM');\n    const year = moment(date).format(\"YYYY\");\n    const dateInMonth = moment(date).format(\"D\");\n    return `${dateInMonth} ${month}, ${year} year`;\n};\n\n\nexport {fetchEmployees};","import {\n    EMPLOYEE_ADD,\n    EMPLOYEE_REMOVE,\n    UPDATE_EMPLOYEES_CHECK_BOX\n} from \"../constants/employeesConstants\";\n\nconst addToBirthdayList = (letter, id) => (dispatch, getState) => {\n    const state = getState();\n    const [newState, employeeData] = updateEmployees(state.employeesList.employees, letter, id);\n\n    dispatch({type: UPDATE_EMPLOYEES_CHECK_BOX, payload: newState});\n    localStorage.setItem('employees', JSON.stringify(newState));\n\n    if(employeeData.checked){\n        let newState = JSON.parse(JSON.stringify(state.birthdayList.employeesBirthday));\n        let sortedData = sortedByMonth(employeeData, newState);\n\n        dispatch({type: EMPLOYEE_ADD, payload: sortedData});\n        localStorage.setItem('employeesBirthday', JSON.stringify(sortedData));\n    }else {\n        let newStateBirthday = JSON.parse(JSON.stringify(state.birthdayList.employeesBirthday));\n        newStateBirthday.forEach((item) => {\n            let month = employeeData.dob.split(' ')[1].slice(0, -1);\n            if (item[0] === month) {\n                if (item[1].length === 1) {\n                    item[1] = []\n                } else {\n                    for (let i = 0; i <= item[1].length; i++) {\n                        if (item[1][i].id === employeeData.id) {\n                            item[1].splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n        dispatch({type: EMPLOYEE_REMOVE, payload: newStateBirthday});\n        localStorage.setItem('employeesBirthday', JSON.stringify(newStateBirthday));\n    }\n\n};\n\nconst updateEmployees = (arrEmployees, letter, id) => {\n    let employeeData;\n    let newArrEmployees = JSON.parse(JSON.stringify(arrEmployees));\n    let arrEmployeesByLetter = newArrEmployees.find((item) => item[0] === letter);\n    arrEmployeesByLetter[1].forEach(item => {\n        if (item.id === id){\n            item.checked = !item.checked;\n            employeeData = item;\n        }\n    });\n    return [newArrEmployees, employeeData];\n};\n\nconst sortedByMonth = (data, state) => {\n    let month = data.dob.split(' ')[1].slice(0, -1);\n    if (state.length) {\n        return state.map((item) => {\n            if (item[0] === month) {\n                item[1].push(data)\n            }\n            return item\n        });\n    }else{\n        const dataBirthday = {\n            'January':[], 'February':[], 'March':[], 'April':[], 'May':[], 'June':[], 'July':[],\n            'August':[], 'September':[], 'October':[], 'November':[], 'December':[],\n        };\n        dataBirthday[month].push(data);\n        const arrBirthdayEnployees = [];\n        let map = new Map(Object.entries(dataBirthday));\n        for (let item of map) {\n            arrBirthdayEnployees.push(item);\n        }\n        return arrBirthdayEnployees;\n    }\n};\n\nexport {\n    addToBirthdayList\n}\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {addToBirthdayList} from \"../actions/birthdayActions\";\n\nconst EmployeeScreen = (props)=>{\n\n const  {employee:{firstName, lastName, checked, id}, letter} = props;\n    const dispatch = useDispatch();\n    const handleCheck = ()=>{\n        dispatch(addToBirthdayList(letter, id));\n    };\n    return (\n        <>\n            <span>{lastName} {firstName}</span><input type=\"checkbox\" checked={checked} onChange={handleCheck} />\n        </>\n    )\n};\n\nexport default EmployeeScreen;","import React from \"react\";\nimport EmployeeScreen from \"./EmployeeScreen\";\n\nconst EmployeesBoxScreen = ({listBox}) => {\n    let [letter, list] = listBox;\n\n    return (\n        <>\n            <h3>{letter}</h3>\n            <ul className='listByAlphabet'>\n                {list.length\n                    ? list.map((item) => <li key={item.id}><EmployeeScreen employee={item} letter={letter}/></li>)\n                    : <li>------</li>\n                }\n            </ul>\n        </>\n    )\n};\n\nexport default EmployeesBoxScreen;","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchEmployees} from \"../actions/employeesActions\";\nimport EmployeesBoxScreen from \"./EmployeesBoxScreen\";\n\nconst EmployeesScreen = () => {\n\n    const employeesList = useSelector(state => state.employeesList);\n    const {employees, loading, error} = employeesList;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchEmployees())\n    }, []);\n\n    return (\n        <div className='blockEmployees'>\n            <h1>Employees</h1>\n            {loading\n                ? <div>Loading...</div>\n                : error\n                    ? <div>error</div>\n                    : <div>\n                        <div className='containerEmployees'>\n                            {employees.map((item) => {\n                                return <div key={item[0]} className=\"boxEmployees\">\n                                    <EmployeesBoxScreen listBox={item}/>\n                                </div>\n                            })}\n                        </div>\n\n                    </div>}\n        </div>\n    )\n};\n\nexport default EmployeesScreen;\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst BirthdayScreen = () => {\n    const birthdayList = useSelector(state => state.birthdayList.employeesBirthday);\n    const employeesBirthday = birthdayList.filter(item => item[1].length !== 0);\n    return (\n        <div>\n            <h1>BirthdayScreens</h1>\n            {\n                employeesBirthday.length\n                    ? <div className='boxBirthday'>\n                        {employeesBirthday.map(item => <div key={item[0]}><BirthdayMonthScreen boxList={item}/></div>)}\n                    </div>\n                    : <div> No selected employees</div>\n            }\n\n        </div>\n    )\n};\n\nconst BirthdayMonthScreen = ({boxList}) => {\n    const [month, list] = boxList;\n    return (\n        <div>\n            <h4>{month}</h4>\n            <ul>\n                {list.map(item => <li key={item.id}>{item.lastName} {item.firstName} - {item.dob}</li>)}\n            </ul>\n        </div>\n    )\n};\n\n\nexport default BirthdayScreen;","import React from \"react\";\nimport './App.css';\nimport EmployeesScreen from \"./Screens/EmployeesSceen\";\nimport BirthdayScreen from \"./Screens/BirthdayScreen\";\n\nfunction App() {\n    return (\n        <div className= 'wrapper'>\n            <EmployeesScreen/>\n            <BirthdayScreen/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {birthdayReducer, employeesReducer} from \"./reducers/employeesReducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({\r\n    employeesList: employeesReducer,\r\n    birthdayList: birthdayReducer\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","import {\n    EMPLOYEE_ADD, EMPLOYEE_REMOVE,\n    EMPLOYEES_LIST_FAIL, EMPLOYEES_LIST_REQUEST,\n    EMPLOYEES_LIST_SUCCESS, UPDATE_EMPLOYEES_CHECK_BOX\n} from \"../constants/employeesConstants\";\n\nconst employeesReducer = (state = {employees: []}, action) => {\n    switch (action.type) {\n        case EMPLOYEES_LIST_REQUEST:\n            return {\n                loading: true,\n                employees: []\n            };\n        case EMPLOYEES_LIST_SUCCESS:\n            return {\n                loading: false,\n                employees: action.payload\n            };\n        case EMPLOYEES_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        case UPDATE_EMPLOYEES_CHECK_BOX:\n            return {\n                loading: false,\n                employees: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nconst birthdayReducer = (state = {\n    employeesBirthday: JSON.parse(localStorage.getItem(\"employeesBirthday\") || \"[]\")\n}, action) => {\n    switch (action.type) {\n        case EMPLOYEE_ADD:\n            return {\n                employeesBirthday: action.payload\n            };\n        case EMPLOYEE_REMOVE:\n            return {\n                employeesBirthday: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport {\n    employeesReducer,\n    birthdayReducer\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}